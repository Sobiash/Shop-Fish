{"version":3,"sources":["helpers.js","components/Store.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","SampleFishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","serviceWorker.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","getStoreName","arr","concat","Math","floor","random","length","Store","storeInput","React","createRef","goToStore","e","preventDefault","storeName","target","elements","myInfo","value","_this","props","history","push","react_default","a","createElement","className","onSubmit","this","type","name","required","placeholder","defaultValue","Component","Header","Order","showOrder","key","fish","fishes","orderCount","order","isAvailable","status","price","onClick","removeFromOrder","_this2","orderKeys","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","current","parseFloat","desc","image","addFish","currentTarget","reset","ref","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","fishKey","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","src_components_AddFishForm","loadSampleFishes","src_components_Login","sampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","src","details","alt","disabled","addToOrder","ordkey","App","Date","now","localStorageRef","localStorage","getItem","match","params","JSON","parse","syncState","setItem","stringify","removeBinding","src_components_Header","src_components_Fish","src_components_Order","components_Inventory","NotFound","Router","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","components_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9bd5062.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function getStoreName() {\n  const storeIds = [\n    \"poland\",\n    \"norway\",\n    \"sweden\",\n    \"denmark\",\n    \"srilanka\",\n    \"finland\",\n    \"canada\",\n    \"america\",\n    \"england\",\n    \"australia\"\n  ];\n\n  return `${rando(storeIds)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getStoreName } from \"../helpers\";\n\nclass Store extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n  storeInput = React.createRef();\n  goToStore = e => {\n    e.preventDefault();\n    // const storeName = this.storeInput.current.value;\n    const storeName = e.target.elements.myInfo.value;\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          // ref={this.storeInput}\n          name=\"myInfo\"\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getStoreName()}\n        />\n        <button type=\"submit\">Visit Store</button>\n      </form>\n    );\n  }\n}\n\nexport default Store;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  return (\n    <header className=\"top\">\n      <h1>\n        Deal\n        <span className=\"ofThe\">\n          <span className=\"of\">Of</span>\n          <span className=\"the\">The</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>Fresh Daily</span>\n      </h3>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport \"./Order.css\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n  showOrder = key => {\n    const fish = this.props.fishes[key];\n    const orderCount = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    if (!fish) {\n      return null;\n    }\n    if (isAvailable) {\n      return (\n        <li key={key}>\n          {orderCount} lbs {fish.name}\n          {formatPrice(orderCount * fish.price)}\n          <button onClick={() => this.props.removeFromOrder(key)}>\n            &times;\n          </button>\n        </li>\n      );\n    } else {\n      return <li>Sorry {fish ? fish.name : \"fish\"} is no longer available.</li>;\n    }\n  };\n\n  render() {\n    const orderKeys = Object.keys(this.props.order);\n    const total = orderKeys.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const orderCount = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + orderCount * fish.price;\n      } else {\n        return prevTotal;\n      }\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h1>Order</h1>\n        <ul className=\"order\">\n          {orderKeys.map(this.showOrder)}\n          <li className=\"total\">Total:{formatPrice(total)}</li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AddFishForm.css\";\n\nclass AddFishForm extends Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = e => {\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Fish Desc\" />\n        <input name=\"image\" ref={this.imageRef} type=\"text\" />\n        <button type=\"submit\"> + Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      name: PropTypes.string,\n      image: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    fishKey: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func\n  };\n\n  handleChange = e => {\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value\n    };\n\n    this.props.updateFish(this.props.fishKey, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          name=\"price\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.fishKey)}>\n          Delete Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Login.css\";\n\nconst Login = props => {\n  return (\n    <div className=\"login\">\n      <h1>Inventory</h1>\n      <p>Sign in to manage your store's inventory.</p>\n      <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n        Login With Github\n      </button>\n      <button\n        className=\"facebook\"\n        onClick={() => props.authenticate(\"Facebook\")}\n      >\n        Login With Facebook\n      </button>\n      <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n        Login With Twitter\n      </button>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCiIlmYgjUVKgryzU2DzXqfpxs9vQCEHgw\",\n  authDomain: \"fish-shop-31ae8.firebaseapp.com\",\n  databaseURL: \"https://fish-shop-31ae8.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    const store = await base.fetch(this.props.storeId, { context: this });\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    await firebase.auth().signOut();\n    this.setState({\n      uid: null\n    });\n  };\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, Only owner of the store can use this option.</p>\n          {logout}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"inventory\">\n        <h1>Inventory</h1>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            fishKey={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","const sampleFishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyones favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default sampleFishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport \"./Fish.css\";\nimport \"../SampleFishes\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      name: PropTypes.string,\n      image: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n    ordKey: PropTypes.string\n  };\n  render() {\n    return (\n      <li className=\"menu-fish\">\n        <img\n          src={this.props.details.image}\n          alt={this.props.details.name}\n          className=\"img\"\n        />\n        <h3 className=\"fish-name\">\n          {this.props.details.name}\n          <span className=\"price\">{formatPrice(this.props.details.price)}</span>\n        </h3>\n        <p className=\"desc\">{this.props.details.desc}</p>\n        <button\n          disabled={this.props.details.status === \"unavailable\"}\n          onClick={() => this.props.addToOrder(this.props.ordkey)}\n        >\n          {this.props.details.status === \"available\"\n            ? \"Add To Cart\"\n            : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport Fish from \"./Fish\";\nimport sampleFishes from \"../SampleFishes\";\nimport \"../index.css\";\nimport base from \"../base\";\n\nclass App extends Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n  componentDidMount() {\n    const localStorageRef = localStorage.getItem(\n      this.props.match.params.storeId\n    );\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${this.props.match.params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    const fishes = { ...this.state.fishes };\n    fishes[`fish${Date.now()}`] = fish;\n    this.setState({\n      fishes\n    });\n  };\n\n  updateFish = (key, updatedFish) => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = updatedFish;\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    const fishes = { ...this.state.fishes };\n    fishes[key] = null;\n    this.setState({ fishes });\n  };\n\n  removeFromOrder = key => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({\n      order\n    });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes\n    });\n  };\n\n  addToOrder = key => {\n    const order = { ...this.state.order };\n    order[key] = order[key] + 1 || 1;\n    this.setState({\n      order\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"menu\">\n          <Header />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                details={this.state.fishes[key]}\n                ordkey={key}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <p>Sorry, Something went wrong, please go back to Home page</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Store from \"./Store\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Store} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./components/Router\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}